{"mappings":"AAAA,MCEMA,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MACxBC,EAAM,IAAIC,MACVC,EAAyBN,SAASC,cAAc,qBAChDM,aAuCH,MAAMC,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAElBD,EAAOC,GAAKC,EADXD,EAAI,GACmB,6BAA8BA,QAE9B,4BAA6BA,SAG3D,OAAOD,EA/CKG,GACTC,EAAUZ,SAASa,iBAAiB,WAE1C,IAAIC,EAAoB,EACpBC,EAAY,EAEZC,EAAuB,EACvBC,EAAoB,WAOfC,IACNnB,EAAOoB,MAAQpB,EAAOqB,wBAAwBD,MAC9CpB,EAAOsB,OAAStB,EAAOqB,wBAAwBC,OAC/CnB,EAAIoB,UAAUlB,EAAK,EAAG,EAAGA,EAAIe,MAAOf,EAAIiB,OAAQ,EAAG,EAAGtB,EAAOoB,MAAOpB,EAAOsB,iBAerEX,EAAaa,GACnB,MAAMC,EAAM,IAAInB,MAEhB,OADAmB,EAAIC,IAAMF,EACHC,EA1BVpB,EAAIqB,IAAM,kCACVrB,EAAIsB,OAAS,WACVxB,EAAIoB,UAAUlB,EAAK,EAAG,EAAGA,EAAIe,MAAOf,EAAIiB,OAAQ,EAAG,EAAGtB,EAAOoB,MAAOpB,EAAOsB,SAkB9EM,OAAOC,iBAAiB,SAAUV,GAClCS,OAAOC,iBAAiB,qBATrB,MAAMC,EAAOvB,EAAuBc,wBACpCH,EAAoB,KAAQY,EAAKC,IAAMD,EAAKR,OAASM,OAAOI,cAAgBF,EAAKR,OAASM,OAAOI,aAAgB,IAEjHnB,EAAQoB,SAASC,IACdA,EAAGC,UAAUC,OAAO,SAAUlB,EAAoB,UAqCxDC,IACAkB,gCAbSC,IACND,sBAAsBC,GAEtBrB,EAAuBsB,EAAKtB,EAAsBC,EAAmB,KACrEH,EAAoByB,KAAKC,MD3DP,EAAIC,EAAOC,EAAOC,EAAQC,EAAQC,KACpD,IAAIC,EAAUJ,EAAQD,EACnBM,EAAWH,EAASD,EACtB,OAJ+BK,EAIEC,GAASN,GAAYM,EAAQR,GAASK,EAAWC,GAJ1DE,EAIEJ,IAJiC,IAAVI,EAAcD,EAAKC,GAASD,EAAzD,IAAIC,EAAOD,GC4DDE,CAAS,EAAG,GAAI,EAAG,GAAIlC,IAElDD,GAAaD,GAAqBA,GAAqB,GAAKA,GAAqB,KAClFZ,EAAIoB,UAAUf,EAAOO,GAAoB,EAAG,EAAGV,EAAIe,MAAOf,EAAIiB,OAAQ,EAAG,EAAGtB,EAAOoB,MAAOpB,EAAOsB,QACjGN,EAAYD,MAOlB,MAAMwB,EAAI,CAAIa,EAASC,EAAMC,IAGnBF,GAAWC,EAAOD,IADzBE,GADAA,EAASA,EAAS,EAAI,EAAIA,GACR,EAAI,EAAIA,GAMvBC,EAAuBtD,SAASC,cAAc,4BAC9CsD,EAAWvD,SAASC,cAAc,cAClCuD,EAAYxD,SAASC,cAAc,eAEzC0B,OAAOC,iBAAiB,UAAW6B,IAChC,MAAM5B,EAAOyB,EAAqBlC,wBAElC,IACIsC,GADYnB,KAAKC,MAAMX,EAAK8B,OAAS5B,aAEzC6B,QAAQC,IAAIH,GACRA,GAAM,KAAQA,EAAM,GACrBH,EAASO,MAAMC,KAAI,GAAML,MACzBF,EAAUM,MAAME,MAAK,GAAMN,OACnBA,GAAO,IACfH,EAASO,MAAMC,KAAI,KACnBP,EAAUM,MAAME,MAAK","sources":["src/js/utils.js","src/js/app.js"],"sourcesContent":["const _conditionalReturn = (value, func) => value || value === 0 ? func(value) : func\nexport const mapRange = (inMin, inMax, outMin, outMax, value) => {\n   let inRange = inMax - inMin,\n      outRange = outMax - outMin\n    return _conditionalReturn(value, value => outMin + (((value - inMin) / inRange) * outRange))\n}","import { mapRange } from './utils'\n\nconst canvas = document.querySelector('canvas')\nconst ctx = canvas.getContext('2d')\nconst img = new Image()\nconst sectionAnimationScroll = document.querySelector('.animated-macbook')\nconst images = preloadImages()\nconst figures = document.querySelectorAll('.figure')\n\nlet currentFrameIndex = 0\nlet lastFrame = 0\nlet counter = 0\nlet currentPercentScroll = 0\nlet nextPercentScroll = 0\n\nimg.src = 'animation_images/large_0000.jpg'\nimg.onload = function () {\n   ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height)\n}\n\nfunction onResize() {\n   canvas.width = canvas.getBoundingClientRect().width\n   canvas.height = canvas.getBoundingClientRect().height\n   ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height)\n}\n\nfunction onScroll() {\n   const rect = sectionAnimationScroll.getBoundingClientRect()\n   nextPercentScroll = 100 - ((rect.top + rect.height - window.innerHeight) / (rect.height - window.innerHeight)) * 100\n\n   figures.forEach((el) => {\n      el.classList.toggle('active', nextPercentScroll > 80)\n   })\n}\n\nwindow.addEventListener('resize', onResize)\nwindow.addEventListener('scroll', onScroll)\n\nfunction preloadImage(url) {\n   const img = new Image()\n   img.src = url\n   return img\n}\n\nfunction preloadImages() {\n   const images = []\n   for (let i = 0; i < 86; i++) {\n      if (i < 10) {\n         images[i] = preloadImage(`animation_images/large_000${i}.jpg`)\n      } else {\n         images[i] = preloadImage(`animation_images/large_00${i}.jpg`)\n      }\n   }\n   return images\n}\n\nfunction animate() {\n   requestAnimationFrame(animate)\n\n   currentPercentScroll = lerp(currentPercentScroll, nextPercentScroll, 0.08)\n   currentFrameIndex = Math.round(mapRange(0, 80, 0, 86, currentPercentScroll))\n\n   if (lastFrame != currentFrameIndex && currentFrameIndex >= 0 && currentFrameIndex <= 86) {\n      ctx.drawImage(images[currentFrameIndex], 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height)\n      lastFrame = currentFrameIndex\n   }\n}\n\nonResize()\nrequestAnimationFrame(animate)\n\nconst lerp = (current, next, amount) => {\n   amount = amount < 0 ? 0 : amount\n   amount = amount > 1 ? 1 : amount\n   return current + (next - current) * amount\n}\n\n// Animation Macbook closed\n\nconst macbookClosedWrapper = document.querySelector('.animated-macbook-closed')\nconst leftSide = document.querySelector('.left-side')\nconst rightSide = document.querySelector('.right-side')\n\nwindow.addEventListener('scroll', (e) => {\n   const rect = macbookClosedWrapper.getBoundingClientRect()\n   // let scrollPos = Math.round(((window.innerHeight - rect.top) / window.innerHeight) * 100) - 250\n   let scrollPos = Math.round(rect.bottom - innerHeight)\n   let neg =- scrollPos\n   console.log(neg)\n   if (neg > -275 && neg < 0 ) {\n      leftSide.style.left = `${neg}px`\n      rightSide.style.right = `${neg}px`\n   } else if (neg >= 0) {\n      leftSide.style.left = `0%`\n      rightSide.style.right = `0%`\n   }\n})\n\n"],"names":["$664a9e8d27af1557$var$canvas","document","querySelector","$664a9e8d27af1557$var$ctx","getContext","$664a9e8d27af1557$var$img","Image","$664a9e8d27af1557$var$sectionAnimationScroll","$664a9e8d27af1557$var$images","images","i","$664a9e8d27af1557$var$preloadImage","$664a9e8d27af1557$var$preloadImages","$664a9e8d27af1557$var$figures","querySelectorAll","$664a9e8d27af1557$var$currentFrameIndex","$664a9e8d27af1557$var$lastFrame","$664a9e8d27af1557$var$currentPercentScroll","$664a9e8d27af1557$var$nextPercentScroll","$664a9e8d27af1557$var$onResize","width","getBoundingClientRect","height","drawImage","url","img","src","onload","window","addEventListener","rect","top","innerHeight","forEach","el","classList","toggle","requestAnimationFrame","$664a9e8d27af1557$var$animate","$664a9e8d27af1557$var$lerp","Math","round","inMin","inMax","outMin","outMax","value1","inRange","outRange","func","value","$f3aef12a95fb573e$export$f65a7599bbc6b121","current","next","amount","$664a9e8d27af1557$var$macbookClosedWrapper","$664a9e8d27af1557$var$leftSide","$664a9e8d27af1557$var$rightSide","e","neg","bottom","console","log","style","left","right"],"version":3,"file":"index.b7d316d8.js.map"}